openapi: 3.0.0
info:
  title: Test API
  version: 1.0.0
  description: A test API specification

servers:
  - url: http://localhost:8080/api/v1

paths:
  /auth/login:
    post:
      tags:
        - auth
      summary: Login to get access token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
            example:
              username: "testuser"
              password: "testpass"
      responses:
        '200':
          description: Successful login
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                  expires_in:
                    type: integer
              example:
                token: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.test"
                expires_in: 3600

  /products:
    get:
      summary: List all products
      security:
        - BearerAuth: []
      responses:
        '200':
          description: List of products
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
              example:
                - id: "1"
                  name: "Product 1"
                  price: 99.99
                - id: "2"
                  name: "Product 2"
                  price: 149.99

    post:
      summary: Create a product
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
            example:
              name: "New Product"
              price: 199.99
      responses:
        '201':
          description: Product created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
              example:
                id: "3"
                name: "New Product"
                price: 199.99

  /products/{id}:
    get:
      summary: Get product by ID
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          example: "1"
      responses:
        '200':
          description: Product details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
              example:
                id: "1"
                name: "Product 1"
                price: 99.99

  /users/batch:
    post:
      summary: Create multiple users
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/User'
            example:
              - name: "John Doe"
                email: "john@example.com"
              - name: "Jane Smith"
                email: "jane@example.com"
      responses:
        '201':
          description: Users created
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  created:
                    type: integer
              example:
                success: true
                created: 2

components:
  schemas:
    Product:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        price:
          type: number
      required:
        - name
        - price

    User:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        email:
          type: string
      required:
        - name
        - email

  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer

security:
  - BearerAuth: []
